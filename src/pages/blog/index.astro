---
import MainLayout from "@layouts/MainLayout.astro";
// import { getCollection } from "astro:content";
export const prerender = false;

const STRAPI_BASE_URL = import.meta.env.STRAPI_BASE_URL || "https://api.brix-ia.com";
const initialPage = parseInt(Astro.url.searchParams.get("page") || "1");

// Primi 6 post
const pageSize = 6;

const fetchArticles = async (page: number) => {
  const response = await fetch(
    `${STRAPI_BASE_URL}/api/articles?pagination[page]=${page}&pagination[pageSize]=${pageSize}&sort=date:desc&populate=*`
  );
  if (!response.ok) {
    console.error("Strapi Error", response.status);
    return {
      articles: [],
      hasMore: false,
      totalPages: 0,
    };
  }

  const data = await response.json();

  const { data: fetchedArticles, meta } = data;
  return {
    articles: fetchedArticles,
    hasMore: meta.pagination.page < meta.pagination.pageCount,
    totalPages: meta.pagination.pageCount,
  };
};


  const {
    articles: initialArticles,
    hasMore: initialHasMore,
    totalPages,
  } = await fetchArticles(initialPage);

  interface Article {
  title: string;
  description: string;
  slug: string;
  cover?: { url: string };
  date: string;
}
---

<MainLayout title="News della Community Brix-IA">
  <section class="container mx-auto px-4 py-8">
    <h1 class="text-4xl font-bold mb-6 mt-[100px]">Guide e News della Community Brix-IA</h1>

    <div class="articles-container">    
      <div id="post-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {
          initialArticles.map((article: Article) => {
            const { title, description, slug, cover, date } = article;
            const imageUrl = STRAPI_BASE_URL + (cover?.url || '/uploads/Visual_Birxia_64749c8600.jpg');
            return (
              <a href={`/blog/${slug}`} class="block bg-primary rounded-xl shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300 flex flex-col group">
                <img 
                  src={imageUrl} 
                  alt={title} 
                  width="444" 
                  height="250" 
                  class="w-full h-40 object-cover rounded-t-lg transition duration-300 group-hover:brightness-110"
                />
                <div class="p-6 flex flex-col flex-1">
                  <p class="mb-2 text-xs" style="color: var(--color-accent);">{new Date(date).toLocaleDateString('it-IT')}</p>
                  <h2 class="text-2xl font-bold mb-2 text-white transition-colors duration-300 group-hover:text-[var(--color-accent)]">{title}</h2>
                  <p class="text-secondary mb-4 flex-grow">{description}</p>
                </div>
              </a>
            );
          })
        }
      </div>

      <div id="article-loader" class="loader" style="display: none;">Loading...</div>
  </section>

  <!-- Il tuo script rimane invariato, ma lo aggiorno per il nuovo HTML -->
  <script define:vars={{ initialHasMore, initialPage, pageSize, totalPages, STRAPI_BASE_URL }}>
    let isLoading = false;
    let hasMore = initialHasMore;
    let currentPage = initialPage;
    
    const articleLoader = document.getElementById("article-loader");
    const articlesGrid = document.getElementById("post-container");
  
    const fetchMoreArticles = async () => {
      if (isLoading || !hasMore) return;
  
      isLoading = true;
      articleLoader.style.display = "block";
  
      try {
        const response = await fetch(
          `${STRAPI_BASE_URL}/api/articles?pagination[page]=${currentPage + 1}&pagination[pageSize]=${pageSize}&sort=date:desc&populate=*`
        );
        const { data: articles, meta } = await response.json();
        
        if (articles.length === 0) {
          hasMore = false;
        } else {
          currentPage++;
          articles.forEach((article) => {
            const { title, description, slug, cover, date } = article;
            const imageUrl = STRAPI_BASE_URL + (cover?.url || '/uploads/Visual_Birxia_64749c8600.jpg');
            const articleElement = document.createElement("a");
            articleElement.href = `/blog/${slug}`;
            articleElement.classList.add("block", "bg-primary", "rounded-xl", "shadow-md", "overflow-hidden", "hover:shadow-lg", "transition-shadow", "duration-300", "flex", "flex-col", "group");
            articleElement.innerHTML = `
              <img 
                src="${imageUrl}" 
                alt="${title}" 
                width="444" 
                height="250" 
                class="w-full h-40 object-cover rounded-t-lg transition duration-300 group-hover:brightness-110"
              />
              <div class="p-6 flex flex-col flex-1">
                <p class="mb-2 text-xs" style="color: var(--color-accent);">${new Date(date).toLocaleDateString('it-IT')}</p>
                <h2 class="text-2xl font-bold mb-2 text-white transition-colors duration-300 group-hover:text-[var(--color-accent)]">${title}</h2>
                <p class="text-secondary mb-4 flex-grow">${description}</p>
              </div>
            `;
            articlesGrid.appendChild(articleElement);
          });
          hasMore = currentPage < meta.pagination.pageCount;
        }
      } catch (error) {
        console.error("Error fetching articles:", error);
        hasMore = false;
      } finally {
        isLoading = false;
        articleLoader.style.display = hasMore ? "none" : "block";
        articleLoader.textContent = hasMore
          ? "Carico altri articoli ..."
          : "Non ci sono piÃ¹ articoli";
  
        if (!hasMore) {
          window.removeEventListener("scroll", handleScroll);
        }
      }
    };

    const handleScroll = () => {
      if (isLoading || !hasMore) return;
      const scrollHeight = document.documentElement.scrollHeight;
      const scrollTop = window.scrollY || document.documentElement.scrollTop;
      const clientHeight = window.innerHeight || document.documentElement.clientHeight;

      if (scrollTop + clientHeight >= scrollHeight - 200) {
        fetchMoreArticles();
      }
    };

    window.addEventListener("scroll", handleScroll);
  </script>
</MainLayout>
