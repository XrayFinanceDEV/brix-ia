---
import NavButton from "@components/NavButton.astro";
import Logo from "@components/Logo.astro";

const menuItems = [
  { title: "Home", link: "/" },
  { title: "Community", link: "/community" },
  { title: "News e Guide", link: "/blog" },
];

const ctaLink = { title: "Unisciti a Brix-IA", link: "https://t.me/+E54HAdd4b1kyNWU0" };
---

<section>
  <nav class="absolute top-0 left-0 w-full py-6 z-50 bg-transparent transition-all duration-300">
    <div class="container mx-auto px-4 flex justify-between items-center">
      <a class="text-3xl font-bold leading-none text-white" href="/">
        <Logo />
      </a>
      <div class="lg:hidden">
        <NavButton>
          <svg class="block h-4 w-4 fill-current text-white" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
            <title>Mobile menu</title>
            <path d="M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z"></path>
          </svg>
        </NavButton>
      </div>
      <ul class="hidden lg:flex lg:mx-auto lg:items-center lg:w-auto lg:space-x-6">
        {menuItems.map((item) => (
          <li>
            <a class="text-sm font-bold text-white hover:text-[var(--color-accent-dark)] transition" href={item.link}>
              {item.title}
            </a>
          </li>
        ))}
      </ul>
      <a class="hidden lg:inline-block py-2 px-6 bg-accent hover:bg-green-600 text-sm text-dark font-bold rounded-l-xl rounded-t-xl transition duration-200" href={ctaLink.link} target="_blank">{ctaLink.title}</a>
    </div>
  </nav>
  <div class="hidden navbar-menu fixed top-0 left-0 bottom-0 w-5/6 max-w-sm z-50">
    <div class="navbar-backdrop fixed inset-0 bg-gray-800 opacity-25"></div>
    <nav class="relative flex flex-col py-6 px-6 h-full w-full bg-white border-r overflow-y-auto">
      <div class="flex items-center mb-8">
        <button class="navbar-close">
          <svg class="h-6 w-6 text-gray-400 cursor-pointer hover:text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <div>
        <ul>
          {menuItems.map((item) => (
            <li class="mb-1">
              <a class="block p-4 text-sm font-bold text-white hover:text-[var(--color-accent-dark)] transition rounded" href={item.link}>
                {item.title}
              </a>
            </li>
          ))}
        </ul>
      </div>
      <div class="mt-auto">
        <div class="pt-6">
          <a class="block px-4 py-3 mb-2 leading-loose text-xs text-center text-white font-semibold bg-green-600 hover:bg-green-700 rounded-l-xl rounded-t-xl" href={ctaLink.link} target="_blank">{ctaLink.title}</a>
        </div>
        <p class="my-4 text-xs text-center text-gray-400">
          <span>Â© {new Date().getFullYear()} All rights reserved.</span>
        </p>
      </div>
    </nav>
  </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', () => {
    // Selezione degli elementi
    const burger = document.querySelector('.navbar-burger');
    const menu = document.querySelector('.navbar-menu');
    const backdrop = document.querySelector('.navbar-backdrop');
    const closeBtn = document.querySelector('.navbar-close');
    const menuLinks = menu?.querySelectorAll('a');

    // Funzione per attivare/disattivare il menu
    function toggleMenu() {
        menu?.classList.toggle('hidden');
    }

    // Mostra il menu quando si clicca sul burger
    burger?.addEventListener('click', toggleMenu);

    // Nasconde il menu quando si clicca su chiusura o sfondo
    closeBtn?.addEventListener('click', toggleMenu);
    backdrop?.addEventListener('click', toggleMenu);

    // Nasconde il menu quando si clicca su un link
    menuLinks?.forEach(link => {
        link.addEventListener('click', toggleMenu);
    });
});
</script>
